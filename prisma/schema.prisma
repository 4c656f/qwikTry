// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
 id String @id @map("_id") @default(auto()) @db.ObjectId
 email String @unique
 refreshToken String?
 password String
 username String @unique
 cart UserCart?
 userLink String? @unique
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
}
model UserCart{
 id String @id @map("_id") @default(auto()) @db.ObjectId
 userId String @db.ObjectId @unique
 user User @relation(fields: [userId], references: [id])
 cartItems CartItem[]
}


model CartItem{
    id String @id @map("_id") @default(auto()) @db.ObjectId

    amount Int @default(0)

    cartId String? @db.ObjectId
    cart UserCart? @relation(fields: [cartId], references: [id])

    productId String @db.ObjectId
    product Product @relation(fields: [productId], references: [id])

    @@unique([cartId, productId], name: "cartItemUUID")
}


model Product{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    name String
    image Image[]
    price Int?
    link String? @unique
    ProductTypeId String? @db.ObjectId
    productType ProductType? @relation(fields: [ProductTypeId], references: [id])
    cartItems CartItem[]
}



model Category{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    productTypes   ProductType[]
    image Image[]

}
model ProductType{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    name String
    products   Product[]
    category Category? @relation(fields: [categoryID], references: [id])
    categoryID String? @db.ObjectId
    image Image[]
}


model Image{
    id String @id @map("_id") @default(auto()) @db.ObjectId
    src String
    productID String? @db.ObjectId
    product   Product?   @relation(fields: [productID], references: [id])

    productTypeId String? @db.ObjectId
    productType   ProductType?   @relation(fields: [productTypeId], references: [id])

    categoryId String? @db.ObjectId
    category   Category?   @relation(fields: [categoryId], references: [id])
}

